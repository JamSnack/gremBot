<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_xp</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scale = 0.5;
image_xscale = scale;
image_yscale = scale;

//Vary spawned things
friction = 0.5;
speed = 10;
direction = irandom(359);

hspd = 0;
vspd = 0;

value = 1;

//time
time = 0;
time_max = 20;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if time &gt; time_max
{
    if instance_exists(obj_viewerGremlin)
    {   
        var target = instance_nearest(x,y,obj_viewerGremlin);
        var tx = target.x;
        var ty = target.y;
    
        //Horizontal acceleration
        var h_dir = sign(tx-x);
        
        hspd = approach(hspd,20*h_dir,10);
        x += hspd;
        
        
        //Vertical Acceleration
        var v_dir = sign(ty-y);
        vspd = approach(vspd,20*v_dir,10);
        
        y += vspd;
        
        //XP collection check
        if point_distance(x,y,tx,ty) &lt;= 16
        {
            var _v = value;
            
            with target
            {
                xp += _v;
            }
            
            scr_popMessage("+"+string(value),global.fnt_Ui,2,c_aqua,x,y);
            instance_destroy();
        }
    }
    else
    {
        //DESPAWN TIME!
        hspd = approach(hspd,20,6);
        x+= hspd;
        image_xscale = 1;
        
        if x &gt; room_width+16 then instance_destroy();
    }
}

time += 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
